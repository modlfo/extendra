Disassembly Listing for Extendra
Generated From:
E:/leonardo/Development/Extendra/Extendra.X/dist/16F1516/production/Extendra.X.production.cof
10-Jun-2013 19:32:48

---  E:/leonardo/Development/Extendra/Extendra.X/user.c  ------------------------------------------------
1:             /******************************************************************************/
2:             /* Files to Include                                                           */
3:             /******************************************************************************/
4:             
5:             #if defined(__XC)
6:                 #include <xc.h>         /* XC8 General Include File */
7:             #elif defined(HI_TECH_C)
8:                 #include <htc.h>        /* HiTech General Include File */
9:             #endif
10:            
11:            #include <stdint.h>         /* For uint8_t definition */
12:            #include <stdbool.h>        /* For true/false definition */
13:            
14:            #include "user.h"
15:            
16:            /******************************************************************************/
17:            /* User Functions                                                             */
18:            /******************************************************************************/
19:            
20:            /* <Initialize variables in user.h and insert code for user algorithms.> */
21:            
22:            void InitApp(void)
23:            {
24:                /* TODO Initialize User Ports/Peripherals/Project here */
25:                TRISA4 = 0;
0016  0021     MOVLB 0x1
0017  120C     BCF PORTA, 0x4
26:                RA4 = 1;
0018  0020     MOVLB 0x0
0019  160C     BSF PORTA, 0x4
27:                /* Setup analog functionality and port direction */
28:            
29:                /* Initialize peripherals */
30:            
31:                /* Enable interrupts */
32:            }
001A  0008     RETURN
33:            
---  E:/leonardo/Development/Extendra/Extendra.X/system.c  ----------------------------------------------
1:             /******************************************************************************/
2:             /*Files to Include                                                            */
3:             /******************************************************************************/
4:             
5:             #if defined(__XC)
6:                 #include <xc.h>         /* XC8 General Include File */
7:             #elif defined(HI_TECH_C)
8:                 #include <htc.h>        /* HiTech General Include File */
9:             #endif
10:            
11:            #include <stdint.h>        /* For uint8_t definition */
12:            #include <stdbool.h>       /* For true/false definition */
13:            
14:            #include "system.h"
15:            
16:            /* Refer to the device datasheet for information about available
17:            oscillator configurations. */
18:            void ConfigureOscillator(void)
19:            {
20:                /* TODO Add clock switching code if appropriate.  */
21:            
22:                /* Typical actions in this function are to tweak the oscillator tuning
23:                register, select new clock sources, and to wait until new clock sources
24:                are stable before resuming execution of the main project. */
25:            }
001E  0008     RETURN
---  E:/leonardo/Development/Extendra/Extendra.X/main.c  ------------------------------------------------
1:             /******************************************************************************/
2:             /* Files to Include                                                           */
3:             /******************************************************************************/
4:             
5:             #if defined(__XC)
6:                 #include <xc.h>         /* XC8 General Include File */
7:             #elif defined(HI_TECH_C)
8:                 #include <htc.h>        /* HiTech General Include File */
9:             #endif
10:            
11:            #include <stdint.h>        /* For uint8_t definition */
12:            #include <stdbool.h>       /* For true/false definition */
13:            
14:            #include "system.h"        /* System funct/params, like osc/peripheral config */
15:            #include "user.h"          /* User funct/params, such as InitApp */
16:            
17:            /******************************************************************************/
18:            /* User Global Variable Declaration                                           */
19:            /******************************************************************************/
20:            
21:            /* i.e. uint8_t <variable_name>; */
22:            
23:            /******************************************************************************/
24:            /* Main Program                                                               */
25:            /******************************************************************************/
26:            void main(void)
27:            {
28:                /* Configure the oscillator for the device */
29:                ConfigureOscillator();
000D  3180     MOVLP 0x0
000E  201E     CALL 0x1E
000F  3180     MOVLP 0x0
30:            
31:                /* Initialize I/O and Peripherals for application */
32:                InitApp();
0010  3180     MOVLP 0x0
0011  2016     CALL 0x16
0012  3180     MOVLP 0x0
33:            
34:            
35:                while(1)
0013  2813     GOTO 0x13
36:                {
37:                    /* TODO <INSERT USER APPLICATION CODE HERE> */
38:                }
39:            
40:            }
0014  3180     MOVLP 0x0
41:            
---  E:/leonardo/Development/Extendra/Extendra.X/interrupts.c  ------------------------------------------
1:             /******************************************************************************/
2:             /*Files to Include                                                            */
3:             /******************************************************************************/
4:             
5:             #if defined(__XC)
6:                 #include <xc.h>         /* XC8 General Include File */
7:             #elif defined(HI_TECH_C)
8:                 #include <htc.h>        /* HiTech General Include File */
9:             #endif
10:            
11:            #include <stdint.h>         /* For uint8_t definition */
12:            #include <stdbool.h>        /* For true/false definition */
13:            
14:            /******************************************************************************/
15:            /* Interrupt Routines                                                         */
16:            /******************************************************************************/
17:            
18:            /* Baseline devices don't have interrupts. Note that some PIC16's 
19:             * are baseline devices.  Unfortunately the baseline detection macro is 
20:             * _PIC12 */
21:            #ifndef _PIC12
22:            
23:            void interrupt isr(void)
24:            {
0004  3180     MOVLP 0x0
0005  0020     MOVLB 0x0
0006  087F     MOVF 0x7F, W
0007  00F0     MOVWF 0x70
25:                /* This code stub shows general interrupt handling.  Note that these
26:                conditional statements are not handled within 3 seperate if blocks.
27:                Do not use a seperate if block for each interrupt flag to avoid run
28:                time errors. */
29:            
30:            #if 0
31:                
32:                /* TODO Add interrupt routine code here. */
33:            
34:                /* Determine which flag generated the interrupt */
35:                if(<Interrupt Flag 1>)
36:                {
37:                    <Interrupt Flag 1=0>; /* Clear Interrupt Flag 1 */
38:                }
39:                else if (<Interrupt Flag 2>)
40:                {
41:                    <Interrupt Flag 2=0>; /* Clear Interrupt Flag 2 */
42:                }
43:                else
44:                {
45:                    /* Unhandled interrupts */
46:                }
47:            
48:            #endif
49:            
50:            }
0008  0870     MOVF 0x70, W
51:            #endif
52:            
53:            
